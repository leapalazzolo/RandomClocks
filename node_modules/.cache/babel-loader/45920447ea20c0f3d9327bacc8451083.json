{"ast":null,"code":"var _jsxFileName = \"/Users/lpalazzolo/Downloads/timezones/src/components/Clocks/index.js\";\nimport React from \"react\";\nexport default class Clocks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoading: false,\n      items: []\n    };\n  }\n\n  fetchTimeZones() {\n    // Where we're fetching data from\n    fetch(\"http://worldtimeapi.org/api/timezone\") // We get the API response and receive data in JSON format...\n    .then(response => response.json()) // ...then we update the users state\n    .then(data => this.setState({\n      items: data,\n      isLoading: false\n    })) // Catch any errors we hit and update the app\n    .catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchTimeZones();\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          users = _this$state.users,\n          error = _this$state.error;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Clocks\"), error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 18\n      }\n    }, error.message) : null, !isLoading ? users.map(timezone => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: timezone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, \"Timezone: \", timezone), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }\n      }, \"Hour: \", timezone), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }));\n    }) :\n    /*#__PURE__*/\n    // If there is a delay in data, let's let the user know it's loading\n    React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Loading...\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/lpalazzolo/Downloads/timezones/src/components/Clocks/index.js"],"names":["React","Clocks","Component","constructor","props","state","error","isLoading","items","fetchTimeZones","fetch","then","response","json","data","setState","catch","componentDidMount","render","users","message","map","timezone"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,SAAS,EAAE,KAFA;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AACDC,EAAAA,cAAc,GAAG;AACf;AACAC,IAAAA,KAAK,wCAAL,CACE;AADF,KAEGC,IAFH,CAEQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFpB,EAGE;AAHF,KAIGF,IAJH,CAIQG,IAAI,IACR,KAAKC,QAAL,CAAc;AACZP,MAAAA,KAAK,EAAEM,IADK;AAEZP,MAAAA,SAAS,EAAE;AAFC,KAAd,CALJ,EAUE;AAVF,KAWGS,KAXH,CAWSV,KAAK,IAAI,KAAKS,QAAL,CAAc;AAAET,MAAAA,KAAF;AAASC,MAAAA,SAAS,EAAE;AAApB,KAAd,CAXlB;AAYD;;AACDU,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,cAAL;AACD;;AACDS,EAAAA,MAAM,GAAG;AAAA,wBAC6B,KAAKb,KADlC;AAAA,UACCE,SADD,eACCA,SADD;AAAA,UACYY,KADZ,eACYA,KADZ;AAAA,UACmBb,KADnB,eACmBA,KADnB;AAEP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGA,KAAK,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,CAACc,OAAV,CAAH,GAA4B,IAFpC,EAGG,CAACb,SAAD,GACCY,KAAK,CAACE,GAAN,CAAUC,QAAQ,IAAI;AACpB,0BACE;AAAK,QAAA,GAAG,EAAEA,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAcA,QAAd,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAUA,QAAV,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD,KARD,CADD;AAAA;AAWC;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ,CADF;AAoBD;;AAjDiD","sourcesContent":["import React from \"react\";\n\nexport default class Clocks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoading: false,\n      items: []\n    };\n  }\n  fetchTimeZones() {\n    // Where we're fetching data from\n    fetch(`http://worldtimeapi.org/api/timezone`)\n      // We get the API response and receive data in JSON format...\n      .then(response => response.json())\n      // ...then we update the users state\n      .then(data =>\n        this.setState({\n          items: data,\n          isLoading: false\n        })\n      )\n      // Catch any errors we hit and update the app\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n  componentDidMount() {\n    this.fetchTimeZones();\n  }\n  render() {\n    const { isLoading, users, error } = this.state;\n    return (\n      <React.Fragment>\n        <h1>Clocks</h1>\n        {error ? <p>{error.message}</p> : null}\n        {!isLoading ? (\n          users.map(timezone => {\n            return (\n              <div key={timezone}>\n                <p>Timezone: {timezone}</p>\n                <p>Hour: {timezone}</p>\n                <hr />\n              </div>\n            );\n          })\n        ) : (\n          // If there is a delay in data, let's let the user know it's loading\n          <h3>Loading...</h3>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}