{"ast":null,"code":"var _jsxFileName = \"/Users/lpalazzolo/Downloads/timezones/src/components/Clocks/index.js\";\nimport React from \"react\";\nimport ClockTimezone from \"../Clock\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nexport default class Clocks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoading: false,\n      items: [],\n      classes: {\n        root: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-around\",\n          overflow: \"hidden\"\n        },\n        gridList: {\n          width: 600,\n          height: 600\n        }\n      }\n    };\n  }\n\n  fetchTimeZones() {\n    fetch(\"http://worldtimeapi.org/api/timezone\").then(response => response.json()).then(data => {\n      this.setState({\n        items: data,\n        isLoading: false\n      });\n    }).catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchTimeZones();\n  }\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          items = _this$state.items,\n          error = _this$state.error,\n          classes = _this$state.classes;\n    const newItems = items.filter(timezone => timezone.includes(\"/\")).slice(1, 5);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Clocks\"), error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }\n    }, error.message) : null, !isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(GridList, {\n      cellHeight: 300,\n      className: classes.gridList,\n      cols: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, newItems.map(timezone => /*#__PURE__*/React.createElement(GridListTile, {\n      key: timezone,\n      cols: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, \"Timezone: \", timezone), /*#__PURE__*/React.createElement(ClockTimezone, {\n      timezone: timezone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }))))) :\n    /*#__PURE__*/\n    // If there is a delay in data, let's let the user know it's loading\n    React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, \"Loading...\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/lpalazzolo/Downloads/timezones/src/components/Clocks/index.js"],"names":["React","ClockTimezone","GridList","GridListTile","Clocks","Component","constructor","props","state","error","isLoading","items","classes","root","display","flexWrap","justifyContent","overflow","gridList","width","height","fetchTimeZones","fetch","then","response","json","data","setState","catch","componentDidMount","render","newItems","filter","timezone","includes","slice","message","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ClockTimezone from \"../Clock\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\n\nexport default class Clocks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoading: false,\n      items: [],\n      classes: {\n        root: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-around\",\n          overflow: \"hidden\",\n        },\n        gridList: {\n          width: 600,\n          height: 600,\n        },\n      },\n    };\n  }\n\n  fetchTimeZones() {\n    fetch(`http://worldtimeapi.org/api/timezone`)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          items: data,\n          isLoading: false,\n        });\n      })\n      .catch((error) => this.setState({ error, isLoading: false }));\n  }\n  componentDidMount() {\n    this.fetchTimeZones();\n  }\n  render() {\n    const { isLoading, items, error, classes } = this.state;\n    const newItems = items\n      .filter((timezone) => timezone.includes(\"/\"))\n      .slice(1, 5);\n    return (\n      <React.Fragment>\n        <h2>Clocks</h2>\n        {error ? <p>{error.message}</p> : null}\n        {!isLoading ? (\n          <div className={classes.root}>\n            <GridList\n              cellHeight={300}\n              className={classes.gridList}\n              cols={4}\n            >\n              {newItems.map((timezone) => (\n                <GridListTile key={timezone} cols={1}>\n                  <p>Timezone: {timezone}</p>\n                  <ClockTimezone timezone={timezone} />\n                </GridListTile>\n              ))}\n            </GridList>\n          </div>\n        ) : (\n          // If there is a delay in data, let's let the user know it's loading\n          <h3>Loading...</h3>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}